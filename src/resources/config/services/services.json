{
  "container": {},
  "parameters": {},
  "autoloader": {},
  "pathfinder": {},
  "facade.module": {},
  "parser": {},
  "service.library": {},
  "service.builder": {},

  "paygreen.facade": {
    "class": "PGDomainServicesPaygreenFacade",
    "arguments": ["@api.factory"]
  },

  "api.factory": {
    "class": "PGClientServicesApiFactory",
    "arguments": ["@logger.api", "@facade.module", "@parameters"]
  },

  "logger": {
    "class": "PGFrameworkServicesLogger",
    "arguments": ["@dumper"],
    "calls": [
      {
        "method": "setFormat",
        "arguments": ["%{log.format}"]
      },
      {
        "method": "openHandle",
        "arguments": ["%{log.file}"]
      }
    ]
  },
  "logger.api": {
    "class": "PGFrameworkServicesLogger",
    "arguments": ["@dumper"],
    "calls": [
      {
        "method": "setFormat",
        "arguments": ["%{log.api.format}"]
      },
      {
        "method": "openHandle",
        "arguments": ["%{log.api.file}"]
      }
    ]
  },

  "settings": {
    "class": "PGFrameworkServicesSettings",
    "arguments": ["@officer.settings"]
  },

  "dumper": {
    "class": "PGFrameworkServicesDumper"
  },

  "dispatcher": {
    "class": "PGFrameworkServicesDispatcher",
    "catch": {
      "tag": "controller",
      "method": "addControllerName",
      "built": false
    }
  },

  "broadcaster": {
    "class": "PGFrameworkServicesBroadcaster",
    "catch": {
      "tag": "listener",
      "method": "addListener",
      "built": false
    }
  },

  "handler.select": {
    "class": "PGDomainServicesHandlersSelectHandler",
    "arguments": ["@logger"],
    "calls": [
      {
        "method": "setPaygreenFacade",
        "arguments": ["@paygreen.facade"]
      },
      {
        "method": "setPaymentTypeManager",
        "arguments": ["@manager.payment_type"]
      },
      {
        "method": "setTranslatorHandler",
        "arguments": ["@handler.translator"]
      }
    ]
  },
  "handler.picture": {
    "class": "PGFrameworkServicesHandlersPictureHandler",
    "arguments": [
      "${PAYGREEN_MEDIA_DIR}",
      "%{media.baseurl}"
    ]
  },
  "handler.payment_creation": {
    "class": "PGDomainServicesHandlersPaymentCreationHandler"
  },
  "handler.behavior": {
    "class": "PGFrameworkServicesHandlersBehaviorHandler",
    "arguments": ["%behaviors"]
  },
  "handler.payment_testing": {
    "class": "PGDomainServicesHandlersTestingPaymentHandler",
    "arguments": ["@logger", "@logger.api", "@pathfinder"]
  },
  "handler.cache": {
    "class": "PGFrameworkServicesHandlersCacheHandler",
    "arguments": ["%cache", "@logger"]
  },
  "handler.fingerprint": {
    "class": "PGDomainServicesHandlersFingerprintHandler"
  },
  "handler.translator": {
    "class": "PGFrameworkServicesHandlersTranslatorHandler",
    "arguments": ["@handler.cache", "@pathfinder", "%translator"]
  },
  "handler.setup": {
    "class": "PGFrameworkServicesHandlersSetupHandler",
    "arguments": ["@broadcaster", "@settings", "@logger"]
  },
  "handler.refund": {
    "class": "PGDomainServicesHandlersRefundHandler",
    "arguments": ["@paygreen.facade", "@logger"],
    "calls": [
      {
        "method": "setOrderManager",
        "arguments": ["@manager.order"]
      },
      {
        "method": "setTransactionManager",
        "arguments": ["@manager.transaction"]
      }
    ]
  },
  "handler.checkout": {
    "class": "PGDomainServicesHandlersCheckoutHandler",
    "arguments": ["@logger"],
    "calls": [
      {
        "method": "setPaygreenFacade",
        "arguments": ["@paygreen.facade"]
      },
      {
        "method": "setModuleFacade",
        "arguments": ["@facade.module"]
      },
      {
        "method": "setButtonManager",
        "arguments": ["@manager.button"]
      }
    ]
  },

  "factory.order_state_machine": {
    "class": "PGDomainServicesOrderStateMachineFactory",
    "arguments": ["%order.machines"]
  },

  "mapper.order_state": {
    "class": "PGDomainServicesOrderStateMapper",
    "arguments": ["%order.states"],
    "catch": {
      "tag": "mapper.strategy.order_state",
      "method": "addMapperStrategy",
      "built": true
    }
  },

  "strategy.order_state_mapper.settings": {
    "class": "PGDomainServicesStrategiesOrderStateSettingsStrategy",
    "arguments": ["@settings"],
    "calls": [
      {
        "method": "setOrderStateManager",
        "arguments": ["@manager.order_state"]
      }
    ],
    "tags": [
      {
        "name": "mapper.strategy.order_state",
        "options": ["settings"]
      }
    ]
  }
}
